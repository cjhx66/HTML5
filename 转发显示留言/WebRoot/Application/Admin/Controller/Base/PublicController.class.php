<?php/** *简要说明	 * @package 		Admin/Base 	            //所属包 * @author 		    wanglin<1210321011@qq.com>	//作者王琳 * @version 		V1.0	                    //版本号   * @firstday 	    2014/07/07	                //最先写的日期 * @lastmodifide	2014/08/18	                //最后修改日期 *///公共信息处理controllernamespace Admin\Controller\Base;use Think\Controller;class PublicController extends Controller{	// 初始化函数	public function _initialize(){		// 过滤操作		$_GET = abacaAddslashes($_GET);		$_POST = abacaAddslashes($_POST);	}		//加载登录页面	public function login(){		// 清除登录页面COOKIE中的PHPSESSID，解决“会话标识未更新”漏洞		setCookie('PHPSESSID', '', 0, '/');		// 生成随机字符串，所有表单都有值为此字符串的隐藏域，解决“跨站点请求伪造”漏洞		$_SESSION['formstatus'] = $this->randCreateCheckStr();		$this->assign('formstatus', $_SESSION['formstatus']);				$this->display("login");	}			// 检查用户是否登录 	protected function checkUser() {		if (!isset($_SESSION[C('USER_AUTH_KEY')])) {			$this->assign('jumpUrl', C('BASE').'Public/login');			$this->error('没有登录');		}	}			//ajax验证用户名，密码，验证码 	//用户名验证	public function namecheck(){		if(IS_AJAX){			$mod = M("Users");			$name = I('post.name', '', 'trim');			$list =	$mod->where("username = '%s'", array($name))->find();			$data['msg'] = '√';			$data['status'] = 1;						if (!$list){				$data['msg']    = '×';				$data['status'] = 0;			}			$this->ajaxReturn($data);		}	}			//密码验证	public function mimacheck(){		if(IS_AJAX){			$mod = M("Users");			$name = $_POST["name"];  			$list =	$mod->where("username='$name'")->find();			$data['msg'] = '√';			$data['status'] = 1;			if($list['password'] !== $_POST['password']){				$data['msg']    = '×';				$data['status'] = 0;			}			$this->ajaxReturn($data);		}	}			//验证码验证	public function codecheck(){		if(IS_AJAX){			$yzm=$_POST['code'];			$verify = new \Think\Verify();			$data['msg']    = '√';			$data['status'] = 1;						if(!$verify->check($yzm)){				$data['msg']    = '×';				$data['status'] = 0;			}			$this->ajaxReturn($data);		}	}		//执行登录验证方法	public function checkLogin(){		// 根据登录账号获取当前用户信息		$authInfo = M("Users")->where("username = '%s'", array($_POST['name']))->find(); 		// dump($authInfo);exit;		if(!$authInfo){			$this->assign("errorinfo",'帐号不存在！');			$this->redirect(C('BASE').'Public/login');			exit();		} 		// 判断密码		if( $authInfo['password'] != $_POST['password'] ){			$this->assign("errorinfo",'密码错误！');			$this->redirect(C('BASE').'Public/login');			exit();		}			// 查询管理员developer和admin，如果是这两个，跳到首页，如果是别的用户，直接跳到自己的站点管理页面 		// 将当前用户信息存储到session中 		$_SESSION[C('USER_AUTH_KEY')]=$authInfo;		$_SESSION['liu']='liu';		$_SESSION['formstatus'] = dowith_include( $_POST['formstatus'] );		if($_SESSION[C('USER_AUTH_KEY')]['username']=='developer' || $_SESSION[C('USER_AUTH_KEY')]['username'] == 'admin'){					//跳转首页			$this->redirect(C('BASE').'Index/index');  		}else{			// 把自己的站点跟权限列表全部放到session里面 			// 先查出自己的默认站点的权限列表			// $auth=M('Auth')->where("rID=".$authInfo['rID']." and wID=".$authInfo['defaultw'])->select(); 			$authsql="select a.*,b.id as bid,b.pid,b.url,b.name,b.path,concat(b.path,'-',b.id) as bspath from cms_auth a, cms_class b where a.rID=".$authInfo['rID']." and a.wID=".$authInfo['defaultw']."  and a.cID=b.id order by bspath"; 			$auth=M("Auth")->query($authsql); 			// dump($auth);exit; 			// 查出角色下的所有站点			$role_site=M('Role_site');			$rolesitelist=$role_site->where("rID=".$authInfo['rID'])->find();  			// dump($rolesitelist['wID']);exit; 			$rolesitearray=explode(',',$rolesitelist['wID']);			$_SESSION['rolesitearray']=$rolesitearray;			// dump($rolesitearray);exit; 			// 查出所有站点的权限列表			foreach($rolesitearray as $k=>$v){				// 存进去SESSION所有的站点信息  				$sql="select a.*,b.id as bid,b.pid,b.url,b.name,b.path,concat(b.path,'-',b.id) as bspath from cms_auth a, cms_class b where a.rID=".$authInfo['rID']." and a.wID=".$v."  and a.cID=b.id order by bspath";  				// $_SESSION['website'][$v]=M('Auth')->where("rID=".$authInfo['rID']." and wID=".$v)->select(); 				$_SESSION['website'][$v]=M("Auth")->query($sql); 			}			// dump($_SESSION['website']);die;			// 默认站点列表信息			$_SESSION['auth']=$auth; 			// dump($_SESSION);die;			// 去其他站点			$othersite=$rolesitearray; 			$a=array_search($authInfo['defaultw'],$othersite);			unset($othersite[$a]); 			$_SESSION['other']=$othersite;			// dump($othersite);die;						// 权限校验 auth的该角色下面的所有栏目的权限			$allweb=M('Auth')->where("rID = ".$authInfo['rID']." and wID in (".$rolesitelist['wID'].")")->select();			// dump($allweb);die;			$_SESSION['allweb']=$allweb;			// 跳转到自己的默认站点页面			$this->redirect(C('BASE').'W/index');		} 		}			//执行退出操作方法	public function logout(){		unset($_SESSION[C('USER_AUTH_KEY')]);  		$this->redirect(C('BASE').'Public/login');	}			public function password(){		$id = dowith_include( $_GET['id'] );		$this->assign('id', $id);		$this->display();	}			// 更换密码	public function changePwd() {		$this->checkUser();		$map = array();		$map['password'] = dowith_include($_POST['oldpassword']);		if (isset($_POST['id'])) {			$map['id'] = dowith_include($_POST['id']) ;		}		//检查用户		$User = M("Users");		if (!$User->where($map)->field('id')->find()) {			echo '旧密码不符！';exit();		} else {			$User->password = $_POST['password'];			$User->save();			echo '正确';exit();		}	}			//加载验证码	public function verify(){		ob_clean();		//thinkphp3.2.2版本的新的验证码调用方法		$config =    array(   					'fontSize'    =>    14,    // 验证码字体大小    					'length'      =>    4,     // 验证码位数    					'useNoise'    =>    false, // 关闭验证码杂点					'imageW'      =>    120, 					'fontttf'     =>    '5.ttf'					);		$Verify = new \Think\Verify($config);		$Verify->entry();	}	// 随机生成令牌字符串，后台验证使用	private function randCreateCheckStr(){		$arr1 = array('1', '2', '3', '4', '5', '6', '7', '8', '9');		$arr2 = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');		$arr = array_merge($arr1, $arr2);		for($i = 0 ; $i < 8 ; $i ++ ){			$index = rand(0, 34);			$str .= $arr[$index];		}		return $str;	}}